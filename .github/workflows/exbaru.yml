name: Extract rootfsX

on:
  workflow_dispatch:

jobs:
  extract:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'  # Atur versi Node.js yang diinginkan
        
      - name: Download openwrt.img.xz
        run: wget -O openwrt.img.xz https://atdxcdn.eu.org/0:/OpenWRT/OpenWrt_s905x_23.05.3_Clash-Wall-HG680P-14.07.2024_wifi_off.img.xz
        
      - name: Extract openwrt.img.xz
        run: xz -d openwrt.img.xz
        
#      - name: Calculate size and seek offset
#        id: calculate
#        run: |
#         img_size=$(stat --format=%s openwrt.img)
#          fs_start=$(fdisk -l openwrt.img | grep Linux | awk '{print $2}' | tr -d 's')
#          echo "::set-output name=img_size::$img_size"
#          echo "::set-output name=fs_start::$fs_start"

      - name: Calculate size and seek offset
        id: calculate
        run: |
          img_size=$(stat --format=%s openwrt.img)
          fs_start=$(fdisk -l openwrt.img | grep Linux | awk '{print $2}')
          echo "IMG_SIZE=$img_size" >> $GITHUB_ENV
          echo "FS_START=$fs_start" >> $GITHUB_ENV


      - name: Extract rootfs using dd
        run: |
          mkdir rootfs
          sudo dd if=openwrt.img of=rootfs/rootfs.ext4 bs=512 skip=${{ steps.calculate.outputs.fs_start }} count=$(((${{ steps.calculate.outputs.img_size }}-${{ steps.calculate.outputs.fs_start }})*2))     
      
      - name: Mount rootfs
        run: |
          sudo mkdir -p /mnt/rootfs
          sudo mount -o loop rootfs/rootfs.ext4 /mnt/rootfs

      - name: Create rootfs.tar.gz
        run: |
          sudo tar czf rootfs.tar.gz -C /mnt/rootfs .

      - name: Unmount rootfs
        run: |
          sudo umount /mnt/rootfs

      - name: Upload rootfs.tar.gz artifact
        uses: actions/upload-artifact@v4
        with:
          name: rootfs-tarball
          path: rootfs.tar.gz
